my $dataPath = "/users/cwe/profiles";
 my $username = param("user");
 my $profilePath = $dataPath . "/" . $username;
 open(my $fh, "<", $profilePath) || ExitError("profile read error: $profilePath");
 print "<ul>\n";
 while (<$fh>) {
 print "<li>$_</li>\n";
 }
 print "</ul>\n";
_____________________________________


my $dataPath = "/users/cwe/profiles";
 my $username = param("user");
 my $profilePath = $dataPath . "/" . $username;
 open(my $fh, "<", $profilePath) || ExitError("profile read error: $profilePath");
 print "<ul>\n";
 while (<$fh>) {
 print "<li>$_</li>\n";
 }
 print "</ul>\n";
_____________________________________


print "<li>$_</li>\n";
_____________________________________


../../../etc/passwd_____________________________________


../../../etc/passwd_____________________________________


/users/cwe/profiles/../../../etc/passwd_____________________________________


/users/cwe/profiles/../../../etc/passwd_____________________________________


/etc/passwd_____________________________________


/etc/passwd_____________________________________


String filename = System.getProperty("com.domain.application.dictionaryFile");
 File dictionaryFile = new File(filename);
_____________________________________


String filename = System.getProperty("com.domain.application.dictionaryFile");
 File dictionaryFile = new File(filename);
_____________________________________


my $Username = GetUntrustedInput();
 $Username =~ s/\.\.\///;
 my $filename = "/home/user/" . $Username;
 ReadAndSendFile($filename);
_____________________________________


my $Username = GetUntrustedInput();
 $Username =~ s/\.\.\///;
 my $filename = "/home/user/" . $Username;
 ReadAndSendFile($filename);
_____________________________________


../../../etc/passwd_____________________________________


../../../etc/passwd_____________________________________


../../etc/passwd_____________________________________


../../etc/passwd_____________________________________


/home/user/../../etc/passwd_____________________________________


/home/user/../../etc/passwd_____________________________________


String path = getInputPath();
 if (path.startsWith("/safe_dir/")) {
 File f = new File(path);
 f.delete() }
_____________________________________


String path = getInputPath();
 if (path.startsWith("/safe_dir/")) {
 File f = new File(path);
 f.delete() }
_____________________________________


File f = new File(path);
 f.delete()_____________________________________


/safe_dir/../important.dat_____________________________________


/safe_dir/../important.dat_____________________________________


<form action="FileUploadServlet" method="post" enctype="multipart/form-data"> Choose a file to upload: <input type="file" name="filename"/> <br/> <input type="submit" name="submit" value="Submit"/> </form>_____________________________________


<form action="FileUploadServlet" method="post" enctype="multipart/form-data"> Choose a file to upload: <input type="file" name="filename"/> <br/> <input type="submit" name="submit" value="Submit"/> </form>_____________________________________


public class FileUploadServlet extends HttpServlet {
 ... protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
 response.setContentType("text/html");
 PrintWriter out = response.getWriter();
 String contentType = request.getContentType();
 // the starting position of the boundary header int ind = contentType.indexOf("boundary=");
 String boundary = contentType.substring(ind+9);
 String pLine = new String();
 String uploadLocation = new String(UPLOAD_DIRECTORY_STRING);
 //Constant value // verify that content type is multipart form data if (contentType != null && contentType.indexOf("multipart/form-data") != -1) {
 // extract the filename from the Http header BufferedReader br = new BufferedReader(new InputStreamReader(request.getInputStream()));
 ... pLine = br.readLine();
 String filename = pLine.substring(pLine.lastIndexOf("\\"), pLine.lastIndexOf("\""));
 ... // output the file to the local upload directory try {
 BufferedWriter bw = new BufferedWriter(new FileWriter(uploadLocation+filename, true));
 for (String line;
 (line=br.readLine())!=null;
 ) {
 if (line.indexOf(boundary) == -1) {
 bw.write(line);
 bw.newLine();
 bw.flush();
 }
 }
 //end of for loop bw.close();
 }
 catch (IOException ex) {
...}
 // output successful upload response HTML page }
 // output unsuccessful upload response HTML page else {
...}
 }
 ... }
_____________________________________


public class FileUploadServlet extends HttpServlet {
 ... protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
 response.setContentType("text/html");
 PrintWriter out = response.getWriter();
 String contentType = request.getContentType();
 // the starting position of the boundary header int ind = contentType.indexOf("boundary=");
 String boundary = contentType.substring(ind+9);
 String pLine = new String();
 String uploadLocation = new String(UPLOAD_DIRECTORY_STRING);
 //Constant value // verify that content type is multipart form data if (contentType != null && contentType.indexOf("multipart/form-data") != -1) {
 // extract the filename from the Http header BufferedReader br = new BufferedReader(new InputStreamReader(request.getInputStream()));
 ... pLine = br.readLine();
 String filename = pLine.substring(pLine.lastIndexOf("\\"), pLine.lastIndexOf("\""));
 ... // output the file to the local upload directory try {
 BufferedWriter bw = new BufferedWriter(new FileWriter(uploadLocation+filename, true));
 for (String line;
 (line=br.readLine())!=null;
 ) {
 if (line.indexOf(boundary) == -1) {
 bw.write(line);
 bw.newLine();
 bw.flush();
 }
 }
 //end of for loop bw.close();
 }
 catch (IOException ex) {
...}
 // output successful upload response HTML page }
 // output unsuccessful upload response HTML page else {
...}
 }
 ... }
_____________________________________


... protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
 response.setContentType("text/html");
 PrintWriter out = response.getWriter();
 String contentType = request.getContentType();
 // the starting position of the boundary header int ind = contentType.indexOf("boundary=");
 String boundary = contentType.substring(ind+9);
 String pLine = new String();
 String uploadLocation = new String(UPLOAD_DIRECTORY_STRING);
 //Constant value // verify that content type is multipart form data if (contentType != null && contentType.indexOf("multipart/form-data") != -1) {
 // extract the filename from the Http header BufferedReader br = new BufferedReader(new InputStreamReader(request.getInputStream()));
 ... pLine = br.readLine();
 String filename = pLine.substring(pLine.lastIndexOf("\\"), pLine.lastIndexOf("\""));
 ... // output the file to the local upload directory try {
 BufferedWriter bw = new BufferedWriter(new FileWriter(uploadLocation+filename, true));
 for (String line;
 (line=br.readLine())!=null;
 ) {
 if (line.indexOf(boundary) == -1) {
 bw.write(line);
 bw.newLine();
 bw.flush();
 }
 }
 //end of for loop bw.close();
 }
 catch (IOException ex) {
...}
 // output successful upload response HTML page }
 // output unsuccessful upload response HTML page else {
...}
 }
 ..._____________________________________


... protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
 response.setContentType("text/html");
 PrintWriter out = response.getWriter();
 String contentType = request.getContentType();
 // the starting position of the boundary header int ind = contentType.indexOf("boundary=");
 String boundary = contentType.substring(ind+9);
 String pLine = new String();
 String uploadLocation = new String(UPLOAD_DIRECTORY_STRING);
 //Constant value // verify that content type is multipart form data if (contentType != null && contentType.indexOf("multipart/form-data") != -1) {
 // extract the filename from the Http header BufferedReader br = new BufferedReader(new InputStreamReader(request.getInputStream()));
 ... pLine = br.readLine();
 String filename = pLine.substring(pLine.lastIndexOf("\\"), pLine.lastIndexOf("\""));
 ... // output the file to the local upload directory try {
 BufferedWriter bw = new BufferedWriter(new FileWriter(uploadLocation+filename, true));
 for (String line;
 (line=br.readLine())!=null;
 ) {
 if (line.indexOf(boundary) == -1) {
 bw.write(line);
 bw.newLine();
 bw.flush();
 }
 }
 //end of for loop bw.close();
 }
 catch (IOException ex) {
...}
 // output successful upload response HTML page }
 // output unsuccessful upload response HTML page else {
...}
 }
 ..._____________________________________


response.setContentType("text/html");
 PrintWriter out = response.getWriter();
 String contentType = request.getContentType();
 // the starting position of the boundary header int ind = contentType.indexOf("boundary=");
 String boundary = contentType.substring(ind+9);
 String pLine = new String();
 String uploadLocation = new String(UPLOAD_DIRECTORY_STRING);
 //Constant value // verify that content type is multipart form data if (contentType != null && contentType.indexOf("multipart/form-data") != -1) {
 // extract the filename from the Http header BufferedReader br = new BufferedReader(new InputStreamReader(request.getInputStream()));
 ... pLine = br.readLine();
 String filename = pLine.substring(pLine.lastIndexOf("\\"), pLine.lastIndexOf("\""));
 ... // output the file to the local upload directory try {
 BufferedWriter bw = new BufferedWriter(new FileWriter(uploadLocation+filename, true));
 for (String line;
 (line=br.readLine())!=null;
 ) {
 if (line.indexOf(boundary) == -1) {
 bw.write(line);
 bw.newLine();
 bw.flush();
 }
 }
 //end of for loop bw.close();
 }
 catch (IOException ex) {
...}
 // output successful upload response HTML page }
 // output unsuccessful upload response HTML page else {
...}
_____________________________________


response.setContentType("text/html");
 PrintWriter out = response.getWriter();
 String contentType = request.getContentType();
 // the starting position of the boundary header int ind = contentType.indexOf("boundary=");
 String boundary = contentType.substring(ind+9);
 String pLine = new String();
 String uploadLocation = new String(UPLOAD_DIRECTORY_STRING);
 //Constant value // verify that content type is multipart form data if (contentType != null && contentType.indexOf("multipart/form-data") != -1) {
 // extract the filename from the Http header BufferedReader br = new BufferedReader(new InputStreamReader(request.getInputStream()));
 ... pLine = br.readLine();
 String filename = pLine.substring(pLine.lastIndexOf("\\"), pLine.lastIndexOf("\""));
 ... // output the file to the local upload directory try {
 BufferedWriter bw = new BufferedWriter(new FileWriter(uploadLocation+filename, true));
 for (String line;
 (line=br.readLine())!=null;
 ) {
 if (line.indexOf(boundary) == -1) {
 bw.write(line);
 bw.newLine();
 bw.flush();
 }
 }
 //end of for loop bw.close();
 }
 catch (IOException ex) {
...}
 // output successful upload response HTML page }
 // output unsuccessful upload response HTML page else {
...}
_____________________________________


// extract the filename from the Http header BufferedReader br = new BufferedReader(new InputStreamReader(request.getInputStream()));
 ... pLine = br.readLine();
 String filename = pLine.substring(pLine.lastIndexOf("\\"), pLine.lastIndexOf("\""));
 ... // output the file to the local upload directory try {
 BufferedWriter bw = new BufferedWriter(new FileWriter(uploadLocation+filename, true));
 for (String line;
 (line=br.readLine())!=null;
 ) {
 if (line.indexOf(boundary) == -1) {
 bw.write(line);
 bw.newLine();
 bw.flush();
 }
 }
 //end of for loop bw.close();
 }
 catch (IOException ex) {
...}
 // output successful upload response HTML page_____________________________________


// extract the filename from the Http header BufferedReader br = new BufferedReader(new InputStreamReader(request.getInputStream()));
 ... pLine = br.readLine();
 String filename = pLine.substring(pLine.lastIndexOf("\\"), pLine.lastIndexOf("\""));
 ... // output the file to the local upload directory try {
 BufferedWriter bw = new BufferedWriter(new FileWriter(uploadLocation+filename, true));
 for (String line;
 (line=br.readLine())!=null;
 ) {
 if (line.indexOf(boundary) == -1) {
 bw.write(line);
 bw.newLine();
 bw.flush();
 }
 }
 //end of for loop bw.close();
 }
 catch (IOException ex) {
...}
 // output successful upload response HTML page_____________________________________


BufferedWriter bw = new BufferedWriter(new FileWriter(uploadLocation+filename, true));
 for (String line;
 (line=br.readLine())!=null;
 ) {
 if (line.indexOf(boundary) == -1) {
 bw.write(line);
 bw.newLine();
 bw.flush();
 }
 }
 //end of for loop bw.close();
_____________________________________


BufferedWriter bw = new BufferedWriter(new FileWriter(uploadLocation+filename, true));
 for (String line;
 (line=br.readLine())!=null;
 ) {
 if (line.indexOf(boundary) == -1) {
 bw.write(line);
 bw.newLine();
 bw.flush();
 }
 }
 //end of for loop bw.close();
_____________________________________


if (line.indexOf(boundary) == -1) {
 bw.write(line);
 bw.newLine();
 bw.flush();
 }
_____________________________________


bw.write(line);
 bw.newLine();
 bw.flush();
_____________________________________


..._____________________________________


